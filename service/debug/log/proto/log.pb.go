// Code generated by protoc-gen-go. DO NOT EDIT.
// source: service/debug/log/proto/log.proto

package go_micro_debug_log

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Record struct {
	// timestamp of log record
	Timestamp int64 `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	// record metadata
	Metadata map[string]string `protobuf:"bytes,2,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	// record value
	Message              string   `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Record) Reset()         { *m = Record{} }
func (m *Record) String() string { return proto.CompactTextString(m) }
func (*Record) ProtoMessage()    {}
func (*Record) Descriptor() ([]byte, []int) {
	return fileDescriptor_2379613f4f67b012, []int{0}
}

func (m *Record) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Record.Unmarshal(m, b)
}
func (m *Record) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Record.Marshal(b, m, deterministic)
}
func (m *Record) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Record.Merge(m, src)
}
func (m *Record) XXX_Size() int {
	return xxx_messageInfo_Record.Size(m)
}
func (m *Record) XXX_DiscardUnknown() {
	xxx_messageInfo_Record.DiscardUnknown(m)
}

var xxx_messageInfo_Record proto.InternalMessageInfo

func (m *Record) GetTimestamp() int64 {
	if m != nil {
		return m.Timestamp
	}
	return 0
}

func (m *Record) GetMetadata() map[string]string {
	if m != nil {
		return m.Metadata
	}
	return nil
}

func (m *Record) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type ReadRequest struct {
	Service              string   `protobuf:"bytes,1,opt,name=service,proto3" json:"service,omitempty"`
	Version              string   `protobuf:"bytes,2,opt,name=version,proto3" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ReadRequest) Reset()         { *m = ReadRequest{} }
func (m *ReadRequest) String() string { return proto.CompactTextString(m) }
func (*ReadRequest) ProtoMessage()    {}
func (*ReadRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_2379613f4f67b012, []int{1}
}

func (m *ReadRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadRequest.Unmarshal(m, b)
}
func (m *ReadRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadRequest.Marshal(b, m, deterministic)
}
func (m *ReadRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadRequest.Merge(m, src)
}
func (m *ReadRequest) XXX_Size() int {
	return xxx_messageInfo_ReadRequest.Size(m)
}
func (m *ReadRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ReadRequest proto.InternalMessageInfo

func (m *ReadRequest) GetService() string {
	if m != nil {
		return m.Service
	}
	return ""
}

func (m *ReadRequest) GetVersion() string {
	if m != nil {
		return m.Version
	}
	return ""
}

type ReadResponse struct {
	Records              []*Record `protobuf:"bytes,1,rep,name=records,proto3" json:"records,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *ReadResponse) Reset()         { *m = ReadResponse{} }
func (m *ReadResponse) String() string { return proto.CompactTextString(m) }
func (*ReadResponse) ProtoMessage()    {}
func (*ReadResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_2379613f4f67b012, []int{2}
}

func (m *ReadResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ReadResponse.Unmarshal(m, b)
}
func (m *ReadResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ReadResponse.Marshal(b, m, deterministic)
}
func (m *ReadResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ReadResponse.Merge(m, src)
}
func (m *ReadResponse) XXX_Size() int {
	return xxx_messageInfo_ReadResponse.Size(m)
}
func (m *ReadResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ReadResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ReadResponse proto.InternalMessageInfo

func (m *ReadResponse) GetRecords() []*Record {
	if m != nil {
		return m.Records
	}
	return nil
}

func init() {
	proto.RegisterType((*Record)(nil), "go.micro.debug.log.Record")
	proto.RegisterMapType((map[string]string)(nil), "go.micro.debug.log.Record.MetadataEntry")
	proto.RegisterType((*ReadRequest)(nil), "go.micro.debug.log.ReadRequest")
	proto.RegisterType((*ReadResponse)(nil), "go.micro.debug.log.ReadResponse")
}

func init() { proto.RegisterFile("service/debug/log/proto/log.proto", fileDescriptor_2379613f4f67b012) }

var fileDescriptor_2379613f4f67b012 = []byte{
	// 285 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x51, 0x41, 0x4b, 0xf4, 0x30,
	0x14, 0xfc, 0xb2, 0xfd, 0xdc, 0xb5, 0x6f, 0x15, 0x24, 0x78, 0x08, 0x45, 0xb0, 0xf6, 0xd4, 0x53,
	0x0a, 0xab, 0x07, 0xd1, 0x93, 0xb0, 0x9e, 0xd4, 0x4b, 0xfe, 0x41, 0xb6, 0x7d, 0x84, 0x62, 0xdb,
	0xd4, 0x24, 0x2d, 0xec, 0xef, 0xf3, 0x8f, 0x49, 0xd3, 0x76, 0x45, 0x74, 0x6f, 0x6f, 0x5e, 0x66,
	0x26, 0x33, 0x09, 0xdc, 0x58, 0x34, 0x7d, 0x99, 0x63, 0x56, 0xe0, 0xae, 0x53, 0x59, 0xa5, 0x55,
	0xd6, 0x1a, 0xed, 0xf4, 0x30, 0x71, 0x3f, 0x51, 0xaa, 0x34, 0xaf, 0xcb, 0xdc, 0x68, 0xee, 0x39,
	0xbc, 0xd2, 0x2a, 0xf9, 0x24, 0xb0, 0x14, 0x98, 0x6b, 0x53, 0xd0, 0x2b, 0x08, 0x5d, 0x59, 0xa3,
	0x75, 0xb2, 0x6e, 0x19, 0x89, 0x49, 0x1a, 0x88, 0xef, 0x05, 0xdd, 0xc2, 0x69, 0x8d, 0x4e, 0x16,
	0xd2, 0x49, 0xb6, 0x88, 0x83, 0x74, 0xbd, 0x49, 0xf9, 0x6f, 0x3f, 0x3e, 0x7a, 0xf1, 0xb7, 0x89,
	0xfa, 0xdc, 0x38, 0xb3, 0x17, 0x07, 0x25, 0x65, 0xb0, 0xaa, 0xd1, 0x5a, 0xa9, 0x90, 0x05, 0x31,
	0x49, 0x43, 0x31, 0xc3, 0xe8, 0x11, 0xce, 0x7f, 0x88, 0xe8, 0x05, 0x04, 0xef, 0xb8, 0xf7, 0x41,
	0x42, 0x31, 0x8c, 0xf4, 0x12, 0x4e, 0x7a, 0x59, 0x75, 0xc8, 0x16, 0x7e, 0x37, 0x82, 0x87, 0xc5,
	0x3d, 0x49, 0x9e, 0x60, 0x2d, 0x50, 0x16, 0x02, 0x3f, 0x3a, 0xb4, 0x6e, 0xb8, 0x65, 0x7a, 0x8d,
	0x49, 0x3e, 0xc3, 0xe1, 0xa4, 0x47, 0x63, 0x4b, 0xdd, 0x4c, 0x26, 0x33, 0x4c, 0xb6, 0x70, 0x36,
	0x5a, 0xd8, 0x56, 0x37, 0x16, 0xe9, 0x1d, 0xac, 0x8c, 0xef, 0x62, 0x19, 0xf1, 0x75, 0xa3, 0xe3,
	0x75, 0xc5, 0x4c, 0xdd, 0x08, 0x08, 0x5e, 0xb5, 0xa2, 0x2f, 0xf0, 0x7f, 0x30, 0xa3, 0xd7, 0x7f,
	0x6b, 0x0e, 0x49, 0xa3, 0xf8, 0x38, 0x61, 0xcc, 0x91, 0xfc, 0xdb, 0x2d, 0xfd, 0xef, 0xdd, 0x7e,
	0x05, 0x00, 0x00, 0xff, 0xff, 0xd2, 0x44, 0x37, 0xbe, 0xe2, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// LogClient is the client API for Log service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type LogClient interface {
	Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error)
}

type logClient struct {
	cc *grpc.ClientConn
}

func NewLogClient(cc *grpc.ClientConn) LogClient {
	return &logClient{cc}
}

func (c *logClient) Read(ctx context.Context, in *ReadRequest, opts ...grpc.CallOption) (*ReadResponse, error) {
	out := new(ReadResponse)
	err := c.cc.Invoke(ctx, "/go.micro.debug.log.Log/Read", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// LogServer is the server API for Log service.
type LogServer interface {
	Read(context.Context, *ReadRequest) (*ReadResponse, error)
}

// UnimplementedLogServer can be embedded to have forward compatible implementations.
type UnimplementedLogServer struct {
}

func (*UnimplementedLogServer) Read(ctx context.Context, req *ReadRequest) (*ReadResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Read not implemented")
}

func RegisterLogServer(s *grpc.Server, srv LogServer) {
	s.RegisterService(&_Log_serviceDesc, srv)
}

func _Log_Read_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReadRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(LogServer).Read(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/go.micro.debug.log.Log/Read",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(LogServer).Read(ctx, req.(*ReadRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _Log_serviceDesc = grpc.ServiceDesc{
	ServiceName: "go.micro.debug.log.Log",
	HandlerType: (*LogServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Read",
			Handler:    _Log_Read_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "service/debug/log/proto/log.proto",
}
