apiVersion: v1
kind: ServiceAccount
metadata:
  name: micro-server
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: micro-server
rules:
- apiGroups:
  - ""
  resources:
  - pods
  - services
  - namespaces
  verbs:
  - create
  - update
  - delete
  - list
  - patch
  - watch
- apiGroups:
  - "apps"
  resources:
  - deployments
  verbs:
  - create
  - update
  - delete
  - list
  - patch
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  - pods
  - pods/logs
  verbs:
  - get
  - watch
  - list
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: micro-server
subjects:
- kind: ServiceAccount
  name: micro-server
  namespace: default
roleRef:
  kind: ClusterRole
  name: micro-server
  apiGroup: rbac.authorization.k8s.io
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: micro-server
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: micro-server
subjects:
- kind: ServiceAccount
  name: micro-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: default
  name: micro-server
  labels:
    micro: server
    name: micro-server
  annotations:
    name: "server"
    version: "latest"
    source: "github.com/micro/micro"
    owner: "micro"
    group: "micro"
spec:
  replicas: 1
  selector:
    matchLabels:
      name: micro-server
      micro: server
  template:
    metadata:
      labels:
        name: micro-server
        micro: server
    spec:
      serviceAccountName: micro-server
      containers:
      - name: server
        env:
        - name: MICRO_PROFILE
          value: "platform"
        - name: MICRO_PROXY
          value: "micro-network.default.svc.cluster.local"
        - name: MICRO_PROXY_ADDRESS
          value: "0.0.0.0:443"
        - name: MICRO_LOG_LEVEL
          value: "trace"
        - name: MICRO_BROKER_TLS_CA
          value: "/certs/broker/ca.crt"
        - name: MICRO_BROKER_TLS_CERT
          value: "/certs/broker/cert.pem"
        - name: MICRO_BROKER_TLS_KEY
          value: "/certs/broker/key.pem"
        - name: MICRO_EVENTS_TLS_CA
          value: "/certs/events/ca.crt"
        - name: MICRO_EVENTS_TLS_CERT
          value: "/certs/events/cert.pem"
        - name: MICRO_EVENTS_TLS_KEY
          value: "/certs/events/key.pem"
          value: "true"
        - name: MICRO_REGISTRY_TLS_CA
          value: "/certs/registry/ca.crt"
        - name: MICRO_REGISTRY_TLS_CERT
          value: "/certs/registry/cert.pem"
        - name: MICRO_REGISTRY_TLS_KEY
          value: "/certs/registry/key.pem"
        - name: MICRO_ENABLE_ACME
          value: "true"
        - name: MICRO_ACME_HOSTS
          value: 'proxy.m3o.com'
        - name: MICRO_STORE_ADDRESS
          value: "postgresql://root@cockroachdb-cluster-public:26257?ssl=true&sslmode=require&sslrootcert=certs/store/ca.crt&sslkey=certs/store/key.pem&sslcert=certs/store/cert.pem"
        args:
        - server
        image: micro/micro
        imagePullPolicy: Always
        ports:
        - containerPort: 443
          name: https-port
        - containerPort: 8081
          name: proxy-port
        volumeMounts:
        - name: etcd-client-certs
          mountPath: "/certs/registry"
          readOnly: true
        - name: nats-client-certs
          mountPath: "/certs/broker"
          readOnly: true
        - name: nats-client-certs
          mountPath: "/certs/events"
          readOnly: true
        - name: nats-client-certs
          mountPath: "/certs/events"
          readOnly: true
        - name: cockroachdb-client-certs
          mountPath: "/certs/store"
          readOnly: true
      volumes:
      - name: etcd-client-certs
        secret:
          secretName: etcd-client-certs
      - name: nats-client-certs
        secret:
          secretName: nats-client-certs
      - name: cockroachdb-client-certs
        secret:
          secretName: cockroachdb-client-certs
          defaultMode: 0600
---
apiVersion: v1
kind: Service
metadata:
  name: micro-server
  namespace: default
  labels:
    name: micro-server
    micro: server
spec:
  ports:
  - name: https
    port: 443
    targetPort: 443
  selector:
    name: micro-server
    micro: server
  type: LoadBalancer